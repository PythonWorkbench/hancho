# examples/meson/build.hancho

import hancho

compile = hancho.Config(
  desc      = "Compiling {rel(in_src)} -> {rel(out_obj)} ({build_tag})",
  command   = "gcc {includes} {gcc_opts} {defines} {warnings} -c {rel(in_src)} -o {rel(out_obj)}",
  includes  = [
    "-I."
  ],
  gcc_opts  = [
    "{'-O3' if build_tag == 'release' else '-O0'}",
    "-MMD",
    "-fdiagnostics-color=always"
  ],
  defines   = [
    "-D_FILE_OFFSET_BITS=64"
  ],
  warnings  = [
    "-Wall",
    "-Winvalid-pch"
  ],
  out_obj = "{swap_ext(in_src, '.o')}",
  depfile  = "{swap_ext(in_src, '.d')}",
)

link = hancho.Config(
  command   = "gcc {rel(in_objs)} -o {rel(out_bin)} {link_opts}",
  desc      = "Linking {rel(in_objs)} -> {rel(out_bin)}",
  link_opts = [
    "-Wl,--as-needed",
    "-Wl,--no-undefined",
    "-Wl,--start-group",
    "{libs}",
    "-Wl,--end-group",
  ],
  libs = [],
)

main_o = compile(
  in_src = "main.c",
  includes = compile.includes + ["{run_cmd('pkg-config gtk+-3.0 --cflags-only-I')}"],
  gcc_opts = compile.gcc_opts + ["{run_cmd('pkg-config gtk+-3.0 --cflags-only-other')}"],
)

main = link(
  in_objs = main_o,
  out_bin = "demo",
  libs = link.libs + ["{run_cmd('pkg-config gtk+-3.0 --libs')}"],
)
