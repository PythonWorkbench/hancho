#!/usr/bin/python3

import hancho

hancho.config.set(
  name        = "base_config",
  toolchain   = "x86_64-linux-gnu",
  cpp_std     = "-std=c++20",
  gcc_opt     = "{'-O3' if build_type == 'release' else '-g -O0'} -MMD",
  warnings    = "-Wall -Werror -Wno-unused-variable -Wno-unused-local-typedefs -Wno-unused-but-set-variable",
  build_type  = "debug",
)

compile_cpp = hancho.Rule(
  description = "Compiling {files_in} -> {files_out} ({build_type})",
  command     = "{toolchain}-g++ {cpp_std} {gcc_opt} {warnings} {includes} {defines} -c {files_in[0]} -o {file_out}",
  includes    = "-I.",
  defines     = "",
  file_out    = "{swap_ext(files_in[0], '.o')}",
  depfile     = "{swap_ext(files_in[0], '.d')}",
)

link_c_bin = hancho.Rule(
  description = "Linking {file_out}",
  command     = "{toolchain}-g++ {gcc_opt} {warnings} {join(files_in)} {join(deps)} {sys_libs} -o {file_out}",
  sys_libs    = "",
)

test_o = compile_cpp(
  files_in  = "src/test.cpp",
  files_out = "obj/test.o"
)

main_o = compile_cpp(
  files_in  = "src/main.cpp",
  files_out = "obj/main.o"
)

main = link_c_bin(
  files_in = [test_o, main_o],
  files_out = "bin/main"
)
