import hancho
import random
from glob import glob
import os

#hancho.verbose = True

src_files = glob("src/*")

random_touch = hancho.Task(
  desc = "Touch 3 random files in src/ - {in_src}",
  command = [
    "touch {in_src[0]}",
    "touch {in_src[1]}",
    "touch {in_src[2]}",
  ],
  in_src = random.sample(src_files, 3),
)

def generate_filelist(task):
  with open(task.out_list, "w", encoding="utf-8") as file:
    for f in random.sample(src_files, 3):
      hancho.log(f"Writing {f} to {task.out_list}")
      file.write(str(f) + "\n")
  return task.out_list

filelist_txt = hancho.Task(
  desc     = "Write the names of 3 random files in src/ to {out_list}",
  command  = generate_filelist,
  out_list = "filelist.txt",
)

def generate_result(task):
  """Read build/filelist.txt and create a new task to cat those files together into result.txt"""
  with open(task.in_filelist[0], "r", encoding="utf-8") as file:
    from_filelist = [f.strip() for f in file.readlines()]
    task = hancho.Task(
      desc = "Concatenate {in_files} into {out_files}",
      command = "cat {rel(in_files)} > {rel(out_files)}",
      in_files = from_filelist,
      out_files = "result.txt",
      other_files = [random_touch, filelist_txt],
    )
    task.queue()
    return task


result_txt = hancho.Task(
  desc = "Read {in_filelist} and use its contents to generate another task",
  command = generate_result,
  in_filelist = filelist_txt,
  #command_path = os.getcwd(),
)

#print(result_txt)

"""
hancho.task(
  desc = "Print the contents of {rel_source_files}",
  command = "cat {rel_source_files}",
  source_files = result_txt,
)
"""
