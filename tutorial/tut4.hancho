# tutorial/tut4.hancho - Async/await and custom commands
import asyncio
import hancho
import os

# Calling asynchronous functions in a .hancho file is OK
async def do_slow_thing():
  await asyncio.sleep(1)
  return ["some_filename"]

hancho.log("Doing a slow asynchronous thing")
result = do_slow_thing()

# However, top-level awaits will block the rest of the build tasks in this file
hancho.log("Waiting on a slow asynchronous thing")
await result
hancho.log("Waiting done")

# Simple example of a custom command
async def custom_command(task):
  for f in task.files_out:
    hancho.log(f"Touching {f}")
    os.system(f"touch {f}")
  return task.files_out

custom_rule = hancho.Rule(
  desc    = "Custom rule: {files_in} -> {files_out}",
  command = custom_command
)

custom_result = custom_rule(
  files_in  = ["src/main.cpp"],
  files_out = ["build/tut4/custom1", "build/tut4/custom2"]
)

print(await custom_result)
