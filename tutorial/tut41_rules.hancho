# tutorial/tut41_rules.hancho

import hancho

compile = hancho.Config(
  desc    = "Compile {rel(in_src)} -> {rel(out_obj)}",
  command = "g++ -MMD -c {rel(in_src)} -o {rel(out_obj)}",
  out_obj = "{swap_ext(in_src, '.o')}",
  depfile = "{swap_ext(in_src, '.d')}",
)

link = hancho.Config(
  desc    = "Link {rel(in_objs)} -> {rel(out_bin)}",
  command = "g++ {rel(in_objs)} -o {rel(out_bin)}",
)

def c_binary(*, in_srcs, out_bin, **kwargs):
    config = hancho.Config(**kwargs)
    objs = [compile(config, in_src = file) for file in in_srcs]
    return link(config, in_objs = objs, out_bin = out_bin)

exports.c_binary = hancho.Config(call = c_binary)
