# tutorial/tut41_rules.hancho

compile = hancho.Config(
  desc         = "Compile {rel_source_files} -> {rel_build_files}",
  command      = "g++ -MMD -c {rel_source_files} -o {rel_build_files}",
  build_files  = "{swap_ext(source_files, '.o')}",
  build_deps   = "{swap_ext(source_files, '.d')}",
)

link = hancho.Config(
  desc    = "Link {rel_source_files} -> {rel_build_files}",
  command = "g++ {rel_source_files} -o {rel_build_files}",
)

class CBinary(hancho.Config):
    def __call__(self, *args, **kwargs):
        config = hancho.Config(self, *args, **kwargs)
        source_files = config.pop("source_files")
        build_files = config.pop("build_files")
        objs = [compile(config, file) for file in source_files]
        return link(config, objs, build_files)

exports.c_binary = CBinary()
