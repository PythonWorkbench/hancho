# tutorial/tut03.hancho

def compile_cpp(source, config):
  in_path = config.in_path
  obj = source.replace('.cpp', '.o')
  dep = source.replace('.cpp', '.d')
  return hancho.Task(
    config,
    desc    = f"Compile {source}",
    command = f"g++ -MMD -c {config.in_path}/{source} -o {config.out_path}//{obj}",
    in_src  = source,
    out_obj = obj,
    dep_obj = dep,
  )

def link_cpp(tasks, binary, config):
  build_path = config.build_path
  objs = [task.out_obj for task in tasks]
  obj_paths = [f"{build_path}/{obj}" for obj in objs]
  result = hancho.Task(
    config,
    desc    = f"Link {objs} into {binary}",
    command = f"g++ {' '.join(obj_paths)} -o {build_path}/{binary}",
    in_obj  = tasks,
    out_bin = binary,
  )

common = hancho.Config(
  in_path  = "src",
  out_path = "build/tut03",
)

main_o = compile_cpp("main.cpp", common)
util_o = compile_cpp("util.cpp", common)
link_cpp([main_o, util_o], "app", common)
